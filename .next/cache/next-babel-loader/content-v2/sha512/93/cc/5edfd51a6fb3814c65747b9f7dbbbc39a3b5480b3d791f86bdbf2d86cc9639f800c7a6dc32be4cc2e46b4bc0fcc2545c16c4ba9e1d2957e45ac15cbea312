{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ptums/Sites/movie-site/pages/index.js\";\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport Head from 'next/head';\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  var _this = this;\n\n  var page = _ref.page,\n      movies = _ref.movies;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Movie Site Demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        cname: \"description\",\n        content: \"This is a demo of next.js and prismic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movie Site Demo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"This is a sample of the page post type from prismic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Everything in \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: 'green'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this), \" is data from the database\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'green'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: movies.map(function (movie) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/movie/\".concat(movie.id),\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                style: {\n                  color: 'green'\n                },\n                children: movie.content.movies.movie_title.value[0].text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 15\n            }, _this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: page.title.value[0].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), page.content.value.filter(function (a) {\n        return a.text !== \"\";\n      }).map(function (item) {\n        return item.type === 'image' ? /*#__PURE__*/_jsxDEV(Image, {\n          src: item.url // item.dimensions.width\n          ,\n          width: 450 // item.dimensions.height\n          ,\n          height: 320,\n          alt: \"movie camera\"\n        }, \"image\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, _this) : item.type === 'paragraph' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.text\n        }, item.text, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 41\n        }, _this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n} // getStaticPaths function is a way to interface with APIs & databases\n// and return content to the component\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ptums/Sites/movie-site/pages/index.js"],"names":["Image","Link","Head","Home","page","movies","color","map","movie","id","content","movie_title","value","text","title","filter","a","item","type","url"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAKA,eAAe,SAASC,IAAT,OAAgC;AAAA;;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAC7C,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,KAAK,EAAC,aAAZ;AAA0B,QAAA,OAAO,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA,gDAAkB;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAb;AAAA,+BAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eASG;AAAK,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAE;AAAR,OAAZ;AAAA,8BACA;AAAA,kBACID,MAAM,CAACE,GAAP,CAAW,UAACC,KAAD;AAAA,8BACV;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,mBAAYA,KAAK,CAACC,EAAlB,CAAV;AAAA,qCACE;AAAG,gBAAA,KAAK,EAAE;AAACH,kBAAAA,KAAK,EAAE;AAAR,iBAAV;AAAA,0BACCE,KAAK,CAACE,OAAN,CAAcL,MAAd,CAAqBM,WAArB,CAAiCC,KAAjC,CAAuC,CAAvC,EAA0CC;AAD3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,aAASL,KAAK,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA,SAAX;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAYD;AAAA,kBAAKL,IAAI,CAACU,KAAL,CAAWF,KAAX,CAAiB,CAAjB,EAAoBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cAZC,EAaAT,IAAI,CAACM,OAAL,CAAaE,KAAb,CAAmBG,MAAnB,CAA0B,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACH,IAAF,KAAW,EAAf;AAAA,OAA3B,EAA8CN,GAA9C,CAAkD,UAACU,IAAD;AAAA,eAAWA,IAAI,CAACC,IAAL,KAAc,OAAf,gBAC3D,QAAC,KAAD;AACE,UAAA,GAAG,EAAED,IAAI,CAACE,GADZ,CAEE;AAFF;AAGE,UAAA,KAAK,EAAE,GAHT,CAIE;AAJF;AAKE,UAAA,MAAM,EAAE,GALV;AAME,UAAA,GAAG,EAAC;AANN,WAOM,OAPN;AAAA;AAAA;AAAA;AAAA,iBAD2D,GAUxDF,IAAI,CAACC,IAAL,KAAc,WAAf,gBAA8B;AAAA,oBAAoBD,IAAI,CAACJ;AAAzB,WAAQI,IAAI,CAACJ,IAAb;AAAA;AAAA;AAAA;AAAA,iBAA9B,GAAkE,IAVnB;AAAA,OAAlD,CAbA;AAAA;AAAA;AAAA;AAAA;AAAA,YATH;AAAA,kBADF;AAsCD,C,CAED;AACA;;KA1CwBV,I","sourcesContent":["const Prismic = require('@prismicio/client');\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport Head from 'next/head';\nconst apiEndpoint = \"https://my-first-app1.prismic.io/api\";\n\n\n\nexport default function Home({ page, movies }) {\n  return (\n    <>\n      <Head>\n        <title>Movie Site Demo</title>\n        <meta cname=\"description\" content=\"This is a demo of next.js and prismic\" />\n      </Head>\n      <h1>Movie Site Demo</h1>\n      <hr />\n      <h2>This is a sample of the page post type from prismic</h2>\n      <h3>Everything in <span style={{color: 'green'}}><u>green</u></span> is data from the database</h3>\n       <div style={{color: 'green'}}>\n       <ul>\n          {movies.map((movie) => (\n            <li key={movie.id}>\n              <Link href={`/movie/${movie.id}`}>\n                <a style={{color: 'green'}}>\n                {movie.content.movies.movie_title.value[0].text}\n                </a>\n              </Link>\n            </li>\n          ))}\n       </ul>\n      <h1>{page.title.value[0].text}</h1>\n      {page.content.value.filter(a => a.text !== \"\").map((item) => (item.type === 'image') ? (\n        <Image\n          src={item.url}\n          // item.dimensions.width\n          width={450}\n          // item.dimensions.height\n          height={320}\n          alt=\"movie camera\"\n          key=\"image\"\n        />\n      ) : (item.type === 'paragraph') ? <p key={item.text}>{item.text}</p>: null)}\n\n       </div>    \n    </>\n  )\n}\n\n// getStaticPaths function is a way to interface with APIs & databases\n// and return content to the component\nexport async function getStaticProps() {\n  // create a connection between the prismic js library and my apps api on prismic.io\n  const client = Prismic.client(apiEndpoint);\n\n  // make a request for some data from my prismic database\n  // I am grabbing the content with type movie_list\n  const pageReq = await client.query(Prismic.Predicates.at('document.type', 'movie_list'))\n    .then(res => res.results);\n\n\n  // make a request for the movie posts from prismic database\n  const movieReq = await client.query(Prismic.Predicates.at('document.type', 'movies'))\n    .then(res => res.results);\n  \n  return {\n    props: {\n      // I am iterating through the data and boiling it down a bit\n      // so its easier to use in my react component\n      page: pageReq.map((page) => page.data.movie_list)[0],\n      movies: movieReq.map((movie) => {\n        return {\n          id: movie.id,\n          content:movie.data\n        }\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}