{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ptums/Sites/movie-site/pages/movie/[id].js\";\nimport Image from 'next/image';\nimport Link from 'next/link'; // create a connection between the prismic js library and my apps api on prismic.io\n\nexport var __N_SSG = true;\nexport default function Movie(_ref) {\n  var movie = _ref.movie;\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.movie_title.value[0].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Description: \", movie.description.value[0].text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = Movie;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/Users/ptums/Sites/movie-site/pages/movie/[id].js"],"names":["Image","Link","Movie","movie","console","log","movie_title","value","text","description"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACE;;;AAKF,eAAe,SAASC,KAAT,OAA0B;AAAA,MAATC,KAAS,QAATA,KAAS;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,gBAAKA,KAAK,CAACG,WAAN,CAAkBC,KAAlB,CAAwB,CAAxB,EAA2BC;AAAhC;AAAA;AAAA;AAAA;AAAA,YANF,eAOI;AAAA,6BAAG;AAAA,oCAAsBL,KAAK,CAACM,WAAN,CAAkBF,KAAlB,CAAwB,CAAxB,EAA2BC,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAWD;KAduBN,K;AA8BvB","sourcesContent":["const Prismic = require('@prismicio/client');\nimport Image from 'next/image';\nimport Link from 'next/link';\n  // create a connection between the prismic js library and my apps api on prismic.io\n\nconst apiEndpoint = \"https://my-first-app1.prismic.io/api\";\nconst client = Prismic.client(apiEndpoint);\n\nexport default function Movie({ movie }) {\n  console.log(movie);\n\n  return (\n    <>\n      <Link href=\"/\">\n        <a>\n          Home\n        </a>\n      </Link>\n      <h2>{movie.movie_title.value[0].text}</h2>\n        <p><strong>Description: {movie.description.value[0].text}</strong></p>\n    </>\n  )\n}\n\nexport async function getStaticPaths() {\n  // make a request for the movie posts from prismic database\n  const movieReq = await client.query(Prismic.Predicates.at('document.type', 'movies'))\n    .then(res => res.results);\n\n  // ill iterate over all the movies in the array\n  // then ill extract the ids and return an array of urls with the ids\n  // it'll look something like this [/movie/jkfdlsakjfkld, /movie/klsjiojrlwe]\n  const movieUrls = movieReq.map((movie) => `/movie/${movie.id}`);\n  console.log(movieUrls);\n  return {\n    paths: movieUrls,\n    fallback: true\n  }\n};\n\nexport async function getStaticProps({ params }) {\n  // make a request for the movie posts from prismic database\n  const movieReq = await client.getByID(params.id)\n    .then(res => res);\n  \n  return {\n    props: {\n      movie: movieReq.data.movies\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}