{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ptums/Sites/movie-site/pages/index.js\";\nimport Image from 'next/image';\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  var _this = this;\n\n  var page = _ref.page;\n  console.log(page.content.value);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Movie links will go here :)\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: page.title.value[0].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), page.content.value.filter(function (a) {\n      return a.text !== \"\";\n    }).map(function (item) {\n      return item.type === 'image' ? /*#__PURE__*/_jsxDEV(Image, {\n        src: item.url,\n        width: item.dimensions.width,\n        height: item.dimensions.height,\n        alt: \"movie camera\"\n      }, \"image\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, _this) : item.type === 'paragraph' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 41\n      }, _this) : null;\n    })]\n  }, void 0, true);\n} // getStaticPaths function is a way to interface with APIs & databases\n// and return content to the component\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/ptums/Sites/movie-site/pages/index.js"],"names":["Image","Home","page","console","log","content","value","title","text","filter","a","map","item","type","url","dimensions","width","height"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,YAAlB;;AAKA,eAAe,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAErCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,OAAL,CAAaC,KAAzB;AAEA,sBACE;AAAA,2DAEE;AAAA,gBAAKJ,IAAI,CAACK,KAAL,CAAWD,KAAX,CAAiB,CAAjB,EAAoBE;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGN,IAAI,CAACG,OAAL,CAAaC,KAAb,CAAmBG,MAAnB,CAA0B,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACF,IAAF,KAAW,EAAf;AAAA,KAA3B,EAA8CG,GAA9C,CAAkD,UAACC,IAAD;AAAA,aAAWA,IAAI,CAACC,IAAL,KAAc,OAAf,gBAC3D,QAAC,KAAD;AACE,QAAA,GAAG,EAAED,IAAI,CAACE,GADZ;AAEE,QAAA,KAAK,EAAEF,IAAI,CAACG,UAAL,CAAgBC,KAFzB;AAGE,QAAA,MAAM,EAAEJ,IAAI,CAACG,UAAL,CAAgBE,MAH1B;AAIE,QAAA,GAAG,EAAC;AAJN,SAKM,OALN;AAAA;AAAA;AAAA;AAAA,eAD2D,GAQxDL,IAAI,CAACC,IAAL,KAAc,WAAf,gBAA8B;AAAA,kBAAID,IAAI,CAACJ;AAAT;AAAA;AAAA;AAAA;AAAA,eAA9B,GAAkD,IARH;AAAA,KAAlD,CAHH;AAAA,kBADF;AAgBD,C,CAED;AACA;;KAvBwBP,I","sourcesContent":["const Prismic = require('@prismicio/client');\nimport Image from 'next/image';\nconst apiEndpoint = \"https://my-first-app1.prismic.io/api\";\n\n\n\nexport default function Home({ page }) {\n\n  console.log(page.content.value);\n\n  return (\n    <>\n       Movie links will go here :)\n      <h1>{page.title.value[0].text}</h1>\n      {page.content.value.filter(a => a.text !== \"\").map((item) => (item.type === 'image') ? (\n        <Image\n          src={item.url}\n          width={item.dimensions.width}\n          height={item.dimensions.height}\n          alt=\"movie camera\"\n          key=\"image\"\n        />\n      ) : (item.type === 'paragraph') ? <p>{item.text}</p>: null)}\n\n    </>\n  )\n}\n\n// getStaticPaths function is a way to interface with APIs & databases\n// and return content to the component\nexport async function getStaticProps() {\n  // create a connection between the prismic js library and my apps api on prismic.io\n  const client = Prismic.client(apiEndpoint);\n\n  // make a request for some data from my prismic database\n  // I am grabbing the content with type movie_list\n  const pageReq = await client.query(Prismic.Predicates.at('document.type', 'movie_list'))\n    .then(res => res.results);\n\n\n  // make a request for the movie posts from prismic database\n  const movieReq = await client.query(Prismic.Predicates.at('document.type', 'movies'))\n    .then(res => res.results);\n  \n  return {\n    props: {\n      // I am iterating through the data and boiling it down a bit\n      // so its easier to use in my react component\n      page: pageReq.map((page) => page.data.movie_list)[0]\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}