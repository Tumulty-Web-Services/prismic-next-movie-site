{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ptums/Sites/movie-site/pages/movie/[id].js\";\n\nconst Prismic = require('@prismicio/client');\n\nimport Image from 'next/image';\nimport Link from 'next/link';\nconst apiEndpoint = \"https://my-first-app1.prismic.io/api\";\nexport default function Movie() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \"Movie content here..\"]\n  }, void 0, true);\n}\nexport async function getStaticProps() {\n  // create a connection between the prismic js library and my apps api on prismic.io\n  const client = Prismic.client(apiEndpoint); // make a request for the movie posts from prismic database\n\n  const movieReq = await client.query(Prismic.Predicates.at('document.type', 'movies')).then(res => res.results);\n  return {\n    props: {\n      movies: movieReq.map(movie => {\n        return {\n          id: movie.id,\n          content: movie.data\n        };\n      })\n    }\n  };\n}","map":{"version":3,"sources":["/Users/ptums/Sites/movie-site/pages/movie/[id].js"],"names":["Prismic","require","Image","Link","apiEndpoint","Movie","getStaticProps","client","movieReq","query","Predicates","at","then","res","results","props","movies","map","movie","id","content","data"],"mappings":";;;;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,mBAAD,CAAvB;;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,MAAMC,WAAW,GAAG,sCAApB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAAA,kBADF;AAUD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAGP,OAAO,CAACO,MAAR,CAAeH,WAAf,CAAf,CAFqC,CAIrC;;AACA,QAAMI,QAAQ,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAaT,OAAO,CAACU,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,QAAvC,CAAb,EACpBC,IADoB,CACfC,GAAG,IAAIA,GAAG,CAACC,OADI,CAAvB;AAGA,SAAO;AACLC,IAAAA,KAAK,EAAE;AAELC,MAAAA,MAAM,EAAER,QAAQ,CAACS,GAAT,CAAcC,KAAD,IAAW;AAC9B,eAAO;AACLC,UAAAA,EAAE,EAAED,KAAK,CAACC,EADL;AAELC,UAAAA,OAAO,EAACF,KAAK,CAACG;AAFT,SAAP;AAID,OALO;AAFH;AADF,GAAP;AAWD","sourcesContent":["const Prismic = require('@prismicio/client');\nimport Image from 'next/image';\nimport Link from 'next/link';\nconst apiEndpoint = \"https://my-first-app1.prismic.io/api\";\n\nexport default function Movie() {\n  return (\n    <>\n      <Link href=\"/\">\n        <a>\n          Home\n        </a>\n      </Link>\n      Movie content here..\n    </>\n  )\n}\n\nexport async function getStaticProps() {\n  // create a connection between the prismic js library and my apps api on prismic.io\n  const client = Prismic.client(apiEndpoint);\n  \n  // make a request for the movie posts from prismic database\n  const movieReq = await client.query(Prismic.Predicates.at('document.type', 'movies'))\n    .then(res => res.results);\n  \n  return {\n    props: {\n\n      movies: movieReq.map((movie) => {\n        return {\n          id: movie.id,\n          content:movie.data\n        }\n      })\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}